# name: ZAP Security Scan

# on:
#   pull_request:
#     paths-ignore:
#       - '**.md'

# jobs:
#   zap_scan:
#     runs-on: ubuntu-latest
#     name: Scan the web application
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           ref: testing

#       - name: Create ZAP Work Directory
#         run: mkdir -p $GITHUB_WORKSPACE/zap/wrk

#       - name: Adjust Permissions
#         run: sudo chown -R $(whoami) $GITHUB_WORKSPACE/zap

#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.8'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
          
#       - name: Run Flask Application
#         id: run_flask
#         run: nohup python main.py & echo $! > flask_pid.txt

#       - name: Wait for Flask App to Start
#         run: sleep 30  # Adjust the time based on how long your app takes to start



name: GitHub Actions Workflow

on:
  push:
    branches:
      - testing

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Flask Application
        run: |
          nohup python main.py &
          sleep 10  # Give some time for the app to start

      - name: Deploy to Local Server
        run: |
          echo "$SSH_PRIVATE_KEY" | base64 -d > ssh-key
          chmod 400 ssh-key
          rsync -avz --exclude='.git' ./website/* sahud@127.0.0.1:/c/Users/sahud/OneDrive/Desktop/web_app
          ssh -i ssh-key sahud@127.0.0.1 "cd /c/Users/sahud/OneDrive/Desktop/web_app && pip install -r requirements.txt && nohup python main.py & sleep 10"
        shell: bash
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.8.18/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.8.18/x64/lib


  
     




      # - name: Run ZAP Baseline Scan
      #   run: |
      #     # Assuming your Flask app runs on http://localhost:5000
      #     ZAP_TARGET_URL="http://localhost:5000"
      #     docker run --rm -v $GITHUB_WORKSPACE/zap:/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py \
      #       -t $ZAP_TARGET_URL -g gen.conf -r zap-report.html

      # - name: Stop Flask Application
      #   run: kill $(cat flask_pid.txt)

      # - name: Archive ZAP Reports
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: zap-reports
      #     path: $GITHUB_WORKSPACE/zap

